package de.selenium.auto;

import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;

import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvValidationException;

public class CsvReaderExample {
    public static void main(String[] args) {
        String folderPath = "C:\\Users\\engoulou\\Selenium\\Daten\\";
        System.out.println("Directory: "+folderPath);
        try {
            // Listen alle Datteien mit Endung .csv aus dem Verzeichnis
            Files.list(Paths.get(folderPath))
                .filter(path -> path.toString().endsWith(".csv")) 
                .forEach(CsvReaderExample::readCsvFile);

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void readCsvFile(Path filePath) {
        System.out.println("Lecture du fichier : " + filePath.getFileName());

        try (CSVReader reader = new CSVReader(new FileReader(filePath.toFile()))) {
            String[] nextLine;
            while ((nextLine = reader.readNext()) != null) {
                System.out.println(Arrays.toString(nextLine)); // Jeder Zeile ausgeben
            }
        } catch (IOException | CsvValidationException e) {
            e.printStackTrace();
        }
    }
}

/*
public class LesenCsvDateien {
    public static void main(String[] args) {
        // Pfad zum Verzeichnis, in dem die CSV-Dateien liegen
        String directoryPath = "C:\\Users\\engoulou\\Selenium\\Daten";
        System.out.println("Directory: "+directoryPath);
        List<String[]> alleDaten = new ArrayList<>();

        try (Stream<Path> pfade = Files.list(Paths.get(directoryPath))) {
        	System.out.println("PFAD: "+pfade);
            pfade.filter(Files::isRegularFile)
                 .filter(p -> p.toString().endsWith(".csv"))
                 .forEach(pfad -> {
                	 System.out.println("pfad-Element: "+pfad.toString());
                     try (BufferedReader br = Files.newBufferedReader(pfad)) {
                         String zeile;
                         while ((zeile = br.readLine()) != null) {
                             // Annahme: CSV-Felder werden durch Kommas getrennt.
                             // Bei komplexeren CSV-Strukturen (z. B. Felder mit Kommas) ist eine robustere Lösung nötig.
                             String[] felder = zeile.split(",");
                             alleDaten.add(felder);
                             System.out.println("AlleDaten: "+alleDaten);
                         }
                     } catch (IOException e) {
                         e.printStackTrace();
                     }
                 });
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Beispielhafte Ausgabe aller gelesenen Daten:
        for (String[] zeile : alleDaten) {
            for (String feld : zeile) {
                System.out.print(feld + "\t");
            }
            System.out.println();
        }
    }
}*/
