package de.selenium.pages.tests;


import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.Duration;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;
import org.openqa.selenium.WebDriver;

import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvValidationException;

import de.selenium.daten.CsvReaderDaten;
import de.selenium.konfiguration.Config;
import de.selenium.konfiguration.DriverHelper;
import de.selenium.pages.SeleniumAppilcationPage;
import de.selenium.pages.SeleniumHomePage;
import de.selenium.pages.SeleniumLoginPage;
import de.selenium.pages.SeleniumTestForm1Page;

@RunWith(Parameterized.class)
public class TestSpezielleForm1ParameterizedChrome {

    WebDriver driver;

    String browsername;
    String username;
    String password;
    String betreff;
    String name;
    String kursTitel;
    int[] firmenBox1;
    int[] firmenBox2;
    String assert1;
    String assert2;

    public TestSpezielleForm1ParameterizedChrome(String testName, String browsername, String username, String password,
            String betreff, String name, String kursTitel, int[] firmenBox1, int[] firmenBox2, String assert1, String assert2) {

        this.browsername = browsername;
        this.username = username;
        this.password = password;
        this.betreff = betreff;
        this.name = name;
        this.kursTitel = kursTitel;
        this.firmenBox1 = firmenBox1;
        this.firmenBox2 = firmenBox2;
        this.assert1 = assert1;
        this.assert2 = assert2;
    }

    @Before
    public void setUp() throws Exception {
        System.out.println("initialisiere Webdriver.");
        driver = DriverHelper.getDriver(browsername);
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(5));
        driver.manage().window().maximize();
        driver.get(Config.getBaseUrl());
    }

    @After
    public void tearDown() throws Exception {
        System.out.println("Test abgeschlossen - ich räume auf");
        driver.close();
    }

    @Test
    public void testForm1() {
        System.out.println("Starte TestForm1 Testseite");

        // Login
        SeleniumLoginPage loginPage = new SeleniumLoginPage(driver);
        loginPage.zugangsdatenEingeben("selenium42", "R5vxI0j60");
        loginPage.loginButtonAnklicken();

        // Navigation zum Formular
        SeleniumHomePage homePage = new SeleniumHomePage(driver);
        homePage.menuAusklappen();
        homePage.seleniumTestAppLinkAnklicken();

        SeleniumAppilcationPage appPage = new SeleniumAppilcationPage(driver);
        appPage.seleniumTestFrom1LinkAnklicken();

        // Formular ausfüllen
        SeleniumTestForm1Page testForm1Page = new SeleniumTestForm1Page(driver);
        testForm1Page.betreffEingeben(betreff);
        testForm1Page.nameEingeaben(name);
        testForm1Page.selectAuswaehlen1(kursTitel);
        testForm1Page.selectAuswaelen2From(firmenBox1);
        testForm1Page.firmenUebernehmen();
        testForm1Page.selectAuswaelen2To(firmenBox2);
        testForm1Page.ausgewaehlteFirmaNachObenVerschieben();

        // Formular speichern und Ergebnisse prüfen
        testForm1Page.formularSpeichern();
        String erfolgsMeldung = testForm1Page.statusMeldungAuslesen();
        assertTrue(erfolgsMeldung.contains(assert1));

        String erstesElement = testForm1Page.erstesElementDerListeAuslesen();
        assertEquals(erstesElement, assert2);
    }

    // ---------------------------
    // Parameterized Test-Daten
    // ---------------------------
    @Parameters(name = "{0}")
    public static Collection<Object[]> provideTestData() throws Exception {
        String csvFilePath = "testdata.csv";
        // Schreibe die Testdaten in die CSV-Datei
        writeTestDataToCsv(csvFilePath);
        // Lese die CSV-Datei und liefere die Parameter zurück
        return readTestDataFromCsv(csvFilePath);
    }

    // Methode zum Schreiben der Testdaten in eine CSV-Datei
    private static void writeTestDataToCsv(String csvFilePath) throws IOException {
        Object[][] daten = {
            { "Test Form 1 Test 1 Chrome", "chrome", "selenium102", "codingsolo", "Parametrisierter Test 1", "Dieter",
              "Java Grundlagen Kurs mit Dieter", "2,4,6", "2,4", "Java Grundlagen Kurs", "Magazzini Alimentari Riuniti" },
            { "Test Form 1 Test 2 Chrome", "chrome", "selenium102", "codingsolo", "Parametrisierter Test 2", "Miriam",
              "Python Grundlagen Kurs mit Dieter", "2,4,6", "2,4", "Python Grundlagen Kurs", "Magazzini Alimentari Riuniti" },
            { "Test Form 1 Test 2 FireFox", "fireFox", "selenium102", "codingsolo", "Parametrisierter Test 2", "Miriam",
              "Python Grundlagen Kurs mit Dieter", "2,4,6", "2,4", "Python Grundlagen Kurs", "Magazzini Alimentari Riuniti" },
            { "Test Form 1 Test 2 IE", "ie", "selenium102", "codingsolo", "Parametrisierter Test 2", "Miriam",
              "Python Grundlagen Kurs mit Dieter", "2,4,6", "2,4", "Python Grundlagen Kurs", "Magazzini Alimentari Riuniti" }
        };

        try (BufferedWriter writer = Files.newBufferedWriter(Paths.get(csvFilePath))) {
            // Schreibe optional einen Header
            writer.write("testName;browsername;username;password;betreff;name;kursTitel;firmenBox1;firmenBox2;assert1;assert2");
            writer.newLine();
            for (Object[] row : daten) {
                StringBuilder line = new StringBuilder();
                for (int i = 0; i < row.length; i++) {
                    line.append(row[i].toString());
                    if (i < row.length - 1) {
                        line.append(";");
                    }
                }
                writer.write(line.toString());
                writer.newLine();
            }
        }
    }

    // Methode zum Einlesen der CSV-Datei und Konvertierung in eine Liste von Object[] für den Parameterized-Test
    private static List<Object[]> readTestDataFromCsv(String csvFilePath) throws IOException {
        List<Object[]> testData = new ArrayList<>();

        try (BufferedReader reader = Files.newBufferedReader(Paths.get(csvFilePath))) {
            String line;
            boolean firstLine = true;
            while ((line = reader.readLine()) != null) {
                // Überspringe den Header
                if (firstLine) {
                    firstLine = false;
                    continue;
                }
                String[] tokens = line.split(";");
                if (tokens.length == 11) {
                    // Konvertiere die Felder für firmenBox1 und firmenBox2 (Spalte 8 und 9)
                    int[] firmenBox1 = convertToIntArray(tokens[7].split(","));
                    int[] firmenBox2 = convertToIntArray(tokens[8].split(","));
                    Object[] row = new Object[] {
                        tokens[0],             // testName
                        tokens[1],             // browsername
                        tokens[2],             // username
                        tokens[3],             // password
                        tokens[4],             // betreff
                        tokens[5],             // name
                        tokens[6],             // kursTitel
                        firmenBox1,            // firmenBox1
                        firmenBox2,            // firmenBox2
                        tokens[9],             // assert1
                        tokens[10]             // assert2
                    };
                    testData.add(row);
                } else {
                    System.err.println("Ungültige Zeile (falsche Spaltenzahl): " + Arrays.toString(tokens));
                }
            }
        }
        return testData;
    }

    // Hilfsmethode zur Konvertierung eines String-Arrays in ein int-Array
    private static int[] convertToIntArray(String[] daten) {
        int[] intArray = new int[daten.length];
        for (int i = 0; i < daten.length; i++) {
            intArray[i] = Integer.parseInt(daten[i].trim());
        }
        return intArray;
    }
}
