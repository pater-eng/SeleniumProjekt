package de.selenium.daten;

import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvValidationException;

public class CsvReaderDaten {
	public static void main(String[] args) {
		// Pfad zum Verzeichnis, in dem die CSV-Dateien liegen
		String folderPath = "C:/Users/engoulou/Selenium/Daten/";
		System.out.println("Directory: "+folderPath);


		try {
			// Listen alle Dateien mit Endung.csv aus dem Verzeichnis
			Files.list(Paths.get(folderPath))
			.filter(path -> path.toString().endsWith(".csv")) 
			.forEach(CsvReaderDaten::readCsvFile);

		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public static List<Form1ParameterizedSeleniumKursChrome> readCsvFile(Path filePath) {
		System.out.println("Auslesen der Datei : " + filePath.getFileName());
		List<Form1ParameterizedSeleniumKursChrome> forme1Liste = new ArrayList<>();

		try (CSVReader reader = new CSVReader(new FileReader(filePath.toFile()))) {
			// Überspringe die erste Zeile (z.B. den Header)
			reader.readNext();
			reader.getParser().parseLine(";");
			String[] nextLine;
			while ((nextLine = reader.readNext()) != null) {
				System.out.println(Arrays.toString(nextLine)); // Jeder Zeile ausgeben
				Collection<Object[]> forme1ParaListe =  mapToForm1(nextLine);
				//forme1Liste.add((Form1ParameterizedSeleniumKursChrome) forme1ParaListe);
				// Iteriere über die Collection und füge Form1ParameterizedSeleniumKursChrome zu forme1Liste hinzu
	            for (Object[] objArray : forme1ParaListe) {
	                if (objArray.length > 0 && objArray[0] instanceof Form1ParameterizedSeleniumKursChrome) {
	                    forme1Liste.add((Form1ParameterizedSeleniumKursChrome) objArray[0]);
	                }
	            }
			}
		} catch (IOException | CsvValidationException e) {
			e.printStackTrace();
		}

		// Ausgabe der geladenen Form1
		forme1Liste.forEach(System.out::println);
		return forme1Liste;
	}

	public static Collection<Object[]> mapToForm1(String[] daten) {
		List<Object[]> resultList = new ArrayList<>();

		for (String datenzeile : daten) {
			if (datenzeile != null && !datenzeile.isEmpty()) {
				String[] values = datenzeile.split(";"); // Annahme: Semikolon als Trennzeichen

				if (values.length >= 14) { // Sicherstellen, dass genügend Werte vorhanden sind
					String testName = values[0];
					String browsername = values[1];
					String username = values[2];
					String password = values[3];
					String betreff = values[4];
					String name = values[5];
					String kursTitel = values[6];
					int[] firmenBox1 = convertToIntArray(new String[]{values[7], values[8], values[9]});
					int[] firmenBox2 = convertToIntArray(new String[]{values[10], values[11]});
					String assert1 = values[12];
					String assert2 = values[13];

					Form1ParameterizedSeleniumKursChrome formPojo = new Form1ParameterizedSeleniumKursChrome();
					formPojo.setTestName(testName);
					formPojo.setBrowsername(browsername);
					formPojo.setUsername(username);
					formPojo.setPassword(password);
					formPojo.setBetreff(betreff);
					formPojo.setName(name);
					formPojo.setKursTitel(kursTitel);
					formPojo.setFirmenBox1(firmenBox1);
					formPojo.setFirmenBox2(firmenBox2);
					formPojo.setAssert1(assert1);
					formPojo.setAssert2(assert2);

					resultList.add(new Object[]{formPojo});
				} else {
					System.out.println("Ungültige Zeile: " + datenzeile);
				}
			}
		}

		return resultList;
	}



	public static int[] convertToIntArray(String[] daten) {
		int[] intArray = new int[daten.length];
		for (int i = 0; i < daten.length; i++) {
			intArray[i] = Integer.parseInt(daten[i]);
		}
		return intArray;
	}

	public  static String[] convertToStringArray(int[] daten) {
		String[] stringArray = new String[daten.length];
		for (int i = 0; i < daten.length; i++) {
			stringArray[i] = String.valueOf(daten[i]);
		}
		return stringArray;
	}

	public static String getDaten(String[] alleDaten) {
		for (String feld : alleDaten) {
			System.out.print(feld + "\t");
			return feld;
		}
		return null;

	}

}



